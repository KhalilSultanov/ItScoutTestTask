name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  quality-checks:
    runs-on: ubuntu-latest

    env:
      POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
      POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }}
      POSTGRES_PORT: ${{ secrets.POSTGRES_PORT }}
      CELERY_BROKER_URL: ${{ secrets.CELERY_BROKER_URL }}
      DJANGO_SETTINGS_MODULE: ${{ secrets.DJANGO_SETTINGS_MODULE }}
      PYTHONPATH: ${{ secrets.PYTHONPATH }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Install dependencies
        run: poetry install --with dev

      - name: Run flake8
        run: poetry run flake8 core photo_service

      - name: Run black (check only)
        run: poetry run black . --check

      - name: Run mypy
        run: poetry run mypy .

      - name: Wait for Postgres
        run: |
          for i in {1..30}; do
            if pg_isready -h postgres -p 5432; then
              echo "Postgres is ready"
              exit 0
            fi
            echo "Waiting for Postgres..."
            sleep 1
          done
          echo "Postgres failed to start"
          exit 1

      - name: Run tests
        run: poetry run pytest
